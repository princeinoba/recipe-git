{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.js","components/Input/index.js","components/Button/index.js","utils/API.js","components/Thumbnail/index.js","components/Grid/index.js","components/RecipeList/index.js","App.js","index.js"],"names":["Jumbotron","className","target","rel","href","Nav","Input","props","type","Button","children","onClick","join","query","axios","get","params","q","Thumbnail","src","role","aria-label","style","backgroundImage","Container","fluid","Row","Col","size","split","map","RecipeList","RecipeListItem","thumbnail","title","ingredients","App","useState","recipes","setRecipes","recipeSearch","setRecipeSearch","name","value","onChange","event","placeholder","preventDefault","API","then","res","data","catch","err","console","log","length","recipe","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.effc5ed4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <h1>React Recipes</h1>\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.recipepuppy.com/about/api/\">\r\n        Powered by Recipe Puppy\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        React Recipes\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\n// This component lets us use a bootstrap input element without worrying about class names\r\n// or manually wrapping the input with a form-group div\r\n// All of the props passed to this component are spread onto the input element\r\nfunction Input(props) {\r\n  return (\r\n    <div className=\"input-group input-group-lg\">\r\n      <input className=\"form-control\" type=\"text\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nfunction Button({ type = \"default\", className, children, onClick }) {\r\n  return (\r\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\n\r\n// The getRecipes method retrieves recipes from the server\r\n// It accepts a \"query\" or term to search the recipe api for\r\nexport default {\r\n  getRecipes: function(query) {\r\n    return axios.get(\"/api/recipes\", { params: { q: query } });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// The Thumbnail component renders a div that uses some CSS to render a background image\r\n// It will always keep square proportions at any size without the image warping\r\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\r\nfunction Thumbnail({ src }) {\r\n  return (\r\n    <div\r\n      className=\"thumbnail\"\r\n      role=\"img\"\r\n      aria-label=\"Recipe Image\"\r\n      style={{\r\n        backgroundImage: `url(${src})`\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Thumbnail;\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Thumbnail from \"../Thumbnail\";\r\nimport { Container, Row, Col } from \"../Grid\";\r\n\r\n// Exporting both RecipeList and RecipeListItem from this file\r\n\r\n// RecipeList renders a bootstrap list item\r\nexport function RecipeList({ children }) {\r\n  return <ul className=\"list-group\">{children}</ul>;\r\n}\r\n\r\n// RecipeListItem renders a bootstrap list item containing data from the recipe api call\r\nexport function RecipeListItem({\r\n  thumbnail,\r\n  title,\r\n  ingredients,\r\n  href\r\n}) {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"xs-4 sm-2\">\r\n            <Thumbnail src={thumbnail || \"https://placehold.it/300x300\"} />\r\n          </Col>\r\n          <Col size=\"xs-8 sm-9\">\r\n            <h3>{title}</h3>\r\n            <p>Ingredients: {ingredients}</p>\r\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={href}>\r\n              Go to recipe!\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport Nav from \"./components/Nav\";\r\nimport Input from \"./components/Input\";\r\nimport Button from \"./components/Button\";\r\nimport API from \"./utils/API\";\r\nimport { RecipeList, RecipeListItem } from \"./components/RecipeList\";\r\nimport { Container, Row, Col } from \"./components/Grid\";\r\n\r\nfunction App() {\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [recipeSearch, setRecipeSearch] = useState(\"\");\r\n\r\n  const handleInputChange = event => {\r\n    // Destructure the name and value properties off of event.target\r\n    // Update the appropriate state\r\n    const { value } = event.target;\r\n    setRecipeSearch(value);\r\n  };\r\n\r\n  const handleFormSubmit = event => {\r\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\r\n    event.preventDefault();\r\n    API.getRecipes(recipeSearch)\r\n      .then(res => setRecipes(res.data))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Jumbotron />\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <form>\r\n              <Container>\r\n                <Row>\r\n                  <Col size=\"xs-9 sm-10\">\r\n                    <Input\r\n                      name=\"RecipeSearch\"\r\n                      value={recipeSearch}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"Search For a Recipe\"\r\n                    />\r\n                  </Col>\r\n                  <Col size=\"xs-3 sm-2\">\r\n                    <Button\r\n                      onClick={handleFormSubmit}\r\n                      type=\"success\"\r\n                      className=\"input-lg\"\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"xs-12\">\r\n            {!recipes.length ? (\r\n              <h1 className=\"text-center\">No Recipes to Display</h1>\r\n            ) : (\r\n              <RecipeList>\r\n                {recipes.map(recipe => {\r\n                  return (\r\n                    <RecipeListItem\r\n                      key={recipe.title}\r\n                      title={recipe.title}\r\n                      href={recipe.href}\r\n                      ingredients={recipe.ingredients}\r\n                      thumbnail={recipe.thumbnail}\r\n                    />\r\n                  );\r\n                })}\r\n              </RecipeList>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}